{"version":3,"sources":["GameModal.js","GameGraph.js","image/logo.png","Sidebar.js","GameHistory.js","PlayerModal.js","PlayerGraph.js","SearchUser.js","PlayersHistory.js","UserDetailInfo.js","RankingBoard.js","image/Kinuta.jpg","image/Kito.jpg","image/Arwen.jpg","image/Iris.jpg","image/Roku.jpg","image/JJ.jpg","image/Katherine.jpg","image/Horigoshi.jpg","image/Mary.jpg","image/Lia.jpg","Champions.js","Retention.js","image/logo2.png","SignIn.js","Redeem.js","App.js","index.js"],"names":["GameModal","props","state","showDetailBox","date","result","gameList","handleOpenDetailBox","bind","handleCloseDetailBox","addRowspan","this","setState","getPlayedGameList","a","axios","get","data","dataTable","count","duplicate","i","length","j","game_id","rowSpan","checkbox","onClick","style","fontFamily","fontSize","isOpen","contentLabel","className","overlayClassName","onRequestClose","map","game","user_id","team_id","character_name","rowspan","mode_id","time_created","substring","time_ended","React","Component","RenderLineChart","tempData","gameDate","sort","b","localeCompare","LineChart","width","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","angle","tick","dy","Label","value","position","YAxis","label","dx","Tooltip","Legend","verticalAlign","align","Line","name","type","stroke","path","Sidebar","useState","games","setGames","players","setPlayers","cookie","Cookies","useEffect","TotalPlayedGame","TotalCumulativePlayedPlayer","getTotalPlayedGames","getTotlaPlayedPlayers","src","logo","alt","to","color","textDecoration","remove","textAlign","DashBoard","totalRecord","sortedRecord","isSorted","startDate","Date","endDate","reload","sortTable","console","log","startDateForm","endDateForm","startYear","String","startMonth","startDay","endYear","endMonth","endDay","rightStartDate","rightEndDate","newStartDate","newEndDate","resultRecord","forEach","record","tempRecordDate","push","selected","onChange","dates","start","end","selectsRange","NumPlayedGame","NumUnfinishedGame","GameGraph","PlayerModal","playerList","goInfo","getPlayedPlayerList","player","playerDate","SearchUser","playerID","setPlayerID","playerRecord","setPlayerRecord","hasSomething","setHasSomething","onSubmit","event","preventDefault","getUserInfo","target","placeholder","colorBackground","team_win_id","backgroundColor","match_id","play_time","padding","PlayerHistory","getPlayedPlayer","tempRecord","NumPlayedPlayer","NumTotalPlayedPlayer","PlayerGraph","ChampionList","UserDetailInfo","userId","userName","userHistory","setUserHistory","handleUserInfoBox","setHandleUserInfoBox","open","setOpen","getUserHistory","handleCloseUserInfoBox","championName","champion_id","champion_level","KDA","total_gold","minion_killed","onUserInfoClick","RankingBoard","rankList","isDescendingByPoints","isDescendingByNumGames","totalPlayedPlayers","totalPage","page","sortByPoints","sortByNumGames","rankColor","showingTable","getTotalPlayedPlayer","getRank","calculatePageNumber","tempRank","slice","current_points","TotalNumGame","playerScore","display","border","background","Math","round","rank","ChampionsList","id","image","Kinuta","Kito","Arwen","Iris","Roku","JJ","Katherine","Horigoshi","Mary","Lia","totalPick","Champions","championsList","select","numPickList","numWinList","onClickWinRate","onClickPickRate","callDataInOrder","getNumPick","pickData","getNumWin","winData","pick","numPick","pickRate","toFixed","winRate","numWin","tempList","champion","tempType","tempChampionList","sortChampions","Retention","userData","setUserData","retentionData","setRetentionData","retentionfor30DaysData","setRetentionfor30DaysData","getUserList","resultDataFor7days","day","resultDataFor30Days","countSameUserId","Dday0","Dday1","Dday3","Dday7","Dday15","Dday30","setDate","getDate","newDate","getTime","modify","BarChart","Bar","fill","SignIn","setUserId","userPw","setUserPw","setReload","cookies","history","useHistory","json","password","post","withCredentials","then","res","set","window","location","alert","required","Redeem","useRedeemCode","setRedeemCode","useRedeemCodeByGroup","setRedeemCodeByGroup","getRedeemCode","getRedeemCodeByGroup","redeem","code_string","description","time_used","max_time_use","totalTimeUsed","totalMaxTimeUse","App","exact","component","GameHistory","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.350b9bda.chunk.js","sourcesContent":["import React from 'react';\r\nimport Modal from \"react-modal\";\r\nimport axios from \"axios\";\r\n\r\n//import css\r\nimport \"./style/Modal.css\"\r\nimport \"./style/Table.css\"\r\n\r\nconst path = \"http://13.59.148.13:8000\";\r\n//const path = \"http://localhost:8000\";\r\n\r\nclass GameModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showDetailBox: false,\r\n            date: this.props.result,\r\n            gameList: [],\r\n        }\r\n        this.handleOpenDetailBox = this.handleOpenDetailBox.bind(this);\r\n        this.handleCloseDetailBox = this.handleCloseDetailBox.bind(this);\r\n        this.addRowspan = this.addRowspan.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.getPlayedGameList();\r\n    }\r\n\r\n\r\n    handleOpenDetailBox() {\r\n        this.setState({ showDetailBox: true });\r\n        this.getPlayedGameList();\r\n    }\r\n    \r\n    handleCloseDetailBox() {\r\n        this.setState({ showDetailBox: false })\r\n    }\r\n    \r\n    async getPlayedGameList() {\r\n        const {data} = await axios.get(`${path}/gamesList/${this.props.result}`);\r\n        this.setState({\r\n            gameList: data[0]\r\n        }, this.addRowspan(data[0]));\r\n    }\r\n\r\n    addRowspan(dataTable) {\r\n        let count = 0;\r\n        for(const i of dataTable) {\r\n            i.duplicate = false;\r\n        }\r\n        for(let i=0; i<dataTable.length; i+=1) {\r\n            for(let j=i; j<dataTable.length; j+=1) {\r\n                if(dataTable[i].game_id === dataTable[j].game_id) {\r\n                    count += 1;\r\n                }\r\n\r\n                if(i !== j && dataTable[j].game_id === dataTable[j-1].game_id) {\r\n                    dataTable[j].duplicate = true;\r\n                } \r\n            }\r\n            dataTable[i].rowSpan = count;\r\n            if(dataTable[i].rowSpan >= 10) {\r\n                dataTable[i].checkbox = true;\r\n            } else {\r\n                dataTable[i].checkbox = false;\r\n            }\r\n            count = 0;\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { gameList } = this.state;\r\n        return (\r\n            <span>\r\n                <button onClick={this.handleOpenDetailBox} style={{fontFamily:\"Verdana, sans-serif\", fontSize: \"13px\"}}>Show Info</button>\r\n                <Modal isOpen={this.state.showDetailBox} contentLabel=\"Info Box\" className=\"mymodal\" overlayClassName=\"myoverlay\" onRequestClose={this.handleCloseDetailBox}>\r\n                    <h1 className=\"mainDate\" style={{fontFamily:\"Verdana, sans-serif\", fontSize: \"20px\"}}>Date:{this.props.result}</h1>\r\n                    <div className=\"table-wrapper\">\r\n                        <table className=\"gameTable\">\r\n                            <tr>\r\n                                <th className=\"gGameId\">Game_id</th>\r\n                                <th className=\"gMode\">Mode</th>\r\n                                <th className=\"gDate\">Time_Created</th>\r\n                                <th className=\"gDate\">Time_End</th>\r\n                                <th className=\"gUserId\">User_Id</th>\r\n                                <th className=\"gCharacterName\">Character_Name</th>\r\n                            </tr>\r\n                            {gameList.map((game) =>\r\n                                !game.duplicate ? \r\n                                (<tr>\r\n                                    <th rowspan={game.rowSpan}>\r\n                                        {game.checkbox ? \r\n                                            <span>&#9989;</span>\r\n                                            : null\r\n                                        }\r\n                                        {game.game_id}\r\n                                    </th>\r\n                                    <th rowSpan={game.rowSpan}>{game.mode_id}</th>\r\n                                    <th rowSpan={game.rowSpan}>{game.time_created.substring(11,19)}</th>\r\n                                    <th rowSpan={game.rowSpan}>{game.time_ended.substring(11,19)}</th>\r\n                                    <th>{game.user_id}</th>\r\n                                    <th>\r\n                                        {(game.team_id === 3) ? \r\n                                            <span>&#128065;</span>\r\n                                            : null\r\n                                        }\r\n                                        {game.character_name}\r\n                                    </th>\r\n                                </tr>):\r\n                                (\r\n                                    <tr>\r\n                                        <th>{game.user_id}</th>\r\n                                        <th>\r\n                                        {(game.team_id === 3) ? \r\n                                            <span>&#128065; </span>\r\n                                            : null\r\n                                        }\r\n                                        {game.character_name}\r\n                                        </th>\r\n                                    </tr>\r\n                                )\r\n                            )}\r\n                        </table>\r\n                    </div>\r\n                    <button onClick={this.handleCloseDetailBox}>Close</button>\r\n                </Modal>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GameModal;","import {LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Label} from \"recharts\";\r\n\r\nconst RenderLineChart = (props) => {\r\n    const tempData = props.gameDate;\r\n    // console.log(tempData);\r\n    tempData.sort((a,b) => a.date.localeCompare(b.date));\r\n    return (\r\n        <LineChart width={600} height={330} data={tempData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }} >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"date\" angle=\"-25\" tick={{fontSize:11}} dy={8}>\r\n                <Label value=\"Date\" position=\"insideBottom\" dy={10}/>\r\n            </XAxis>\r\n            <YAxis label={{value: \"Count\", angle: -90, position: \"insideLeft\", dx: 10}}/>\r\n            <Tooltip/>\r\n            <Legend verticalAlign=\"top\" align=\"right\"/>\r\n            <Line name=\"Finished Game\" type=\"monotone\" dataKey=\"NumPlayedGame\" stroke=\"#0095FF\"/>\r\n            <Line name=\"Unfinished Game\" type=\"monotone\" dataKey=\"NumUnfinishedGame\" stroke=\"#FF0000\"/>\r\n        </LineChart>  \r\n    )\r\n}\r\n\r\nexport default RenderLineChart;","export default __webpack_public_path__ + \"static/media/logo.be671eeb.png\";","import React, {useState, useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Cookies from 'universal-cookie';\r\nimport axios from \"axios\";\r\n\r\n// import {MdDashboard} from \"react-icons/md\"\r\nimport {MdGames} from \"react-icons/md\"\r\nimport {MdPerson} from \"react-icons/md\"\r\nimport {IoTrophy} from \"react-icons/io5\"\r\nimport {RiSwordLine} from \"react-icons/ri\";\r\nimport {VscGraph} from \"react-icons/vsc\";\r\nimport {VscGift} from \"react-icons/vsc\";\r\n\r\n//import css\r\nimport \"./style/Sidebar.css\";\r\n\r\n//import image\r\nimport logo from \"./image/logo.png\"\r\n\r\nconst path = \"http://13.59.148.13:8000\";\r\n\r\nconst Sidebar = (props) => {\r\n    const [games, setGames] = useState();\r\n    const [players, setPlayers] = useState();\r\n\r\n    const cookie = new Cookies();\r\n\r\n    useEffect(()=> {\r\n        async function getTotalPlayedGames() {\r\n            const {data} = await axios.get(`${path}/getTotalPlayedGames`);\r\n            setGames(data[0].TotalPlayedGame)\r\n        }\r\n        async function getTotlaPlayedPlayers() {\r\n            const {data} = await axios.get(`${path}/getTotalPlayedPlayers`);\r\n            setPlayers(data[0].TotalCumulativePlayedPlayer)\r\n        }\r\n        getTotalPlayedGames();\r\n        getTotlaPlayedPlayers();\r\n    },[]);\r\n\r\n    const onClick = () => {\r\n        cookie.remove('user', {path: '/'})\r\n    }\r\n\r\n    return(\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar-main\">\r\n                <img src={logo} alt=\"logo of isekai Eternal\" className=\"sidebar-logoImage\"/>\r\n                <Link to=\"/gamerHistory\" style={{color: \"whitesmoke\", textDecoration: \"none\"}}>\r\n                    Admin Page\r\n                </Link>\r\n            </div>\r\n            <div className=\"logout\">\r\n                <Link to=\"/\" className=\"logout-button\">\r\n                    <div>\r\n                        <button onClick={onClick}>\r\n                            Logout\r\n                        </button>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n            <div className=\"sidebar-minor\">\r\n                <MdGames className=\"sidebar-icon\"/>\r\n                <Link to=\"/gamerHistory\" className=\"sidebar-content\">\r\n                    Games History\r\n                </Link>\r\n            </div>\r\n            <div className=\"sidebar-minor\">\r\n                <MdPerson className=\"sidebar-icon\"/>\r\n                <Link to=\"/playerHistory\" className=\"sidebar-content\">\r\n                    Players History\r\n                </Link>\r\n            </div>\r\n            <div className=\"sidebar-minor\">\r\n                <IoTrophy className=\"sidebar-icon\"/>\r\n                <Link to=\"/leaderboard\" className=\"sidebar-content\">\r\n                    Leaderboard\r\n                </Link>\r\n            </div>\r\n            <div className=\"sidebar-minor\">\r\n                <Link to=\"/champions\" className=\"sidebar-content\">\r\n                <RiSwordLine className=\"sidebar-icon\"/>\r\n                    Champions\r\n                </Link>\r\n            </div>\r\n            <div className=\"sidebar-minor\">\r\n                <Link to=\"/retention\" className=\"sidebar-content\">\r\n                    <VscGraph className=\"sidebar-icon\"/>\r\n                    Retention\r\n                </Link>\r\n            </div>\r\n            <div className=\"sidebar-minor\">\r\n                <Link to=\"/redeemCode\" className=\"sidebar-content\">\r\n                    <VscGift className=\"sidebar-icon\"/>\r\n                    Redeem Code\r\n                </Link>\r\n            </div>\r\n            <div style={{position: \"absolute\", bottom: 0, width: \"200px\"}}>\r\n                <br/>\r\n                <div className=\"sidebar-games\">\r\n                    <p>Total Played Games</p>\r\n                    <p style={{textAlign: \"center\", fontSize: \"12pt\"}}>{games}</p>\r\n                </div>\r\n                <div className=\"sidebar-players\">\r\n                    <p>Total Played Players</p>\r\n                    <p style={{textAlign: \"center\", fontSize: \"12pt\"}}>{players}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport axios from \"axios\";\r\nimport GameModal from \"./GameModal\";\r\nimport GameGraph from \"./GameGraph\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\n//import css\r\nimport \"./style/DashBoard.css\"\r\nimport \"./style/Table.css\"\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Sidebar from './Sidebar';\r\n\r\nconst path = \"http://13.59.148.13:8000\";\r\n\r\nclass DashBoard extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      totalRecord: [],\r\n      sortedRecord: [],\r\n      isSorted: false,\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      reload: false,\r\n    }\r\n    this.sortTable = this.sortTable.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTotalPlayedGames();\r\n    console.log(this.state.reload);\r\n    this.setState({\r\n      reload: true\r\n    })\r\n    console.log(this.state.reload);\r\n  }\r\n\r\n  async getTotalPlayedGames () {\r\n    const {data} = await axios.get(`${path}/totalPlayedGame`);\r\n    this.setState({\r\n      totalRecord: data\r\n    });\r\n  }\r\n\r\n  sortTable() {\r\n    const {startDate, endDate, totalRecord} = this.state;\r\n    const startDateForm = startDate;\r\n    const endDateForm = endDate;\r\n\r\n    const startYear = String(startDateForm).substring(11, 15);\r\n    let startMonth = String(startDateForm).substring(4,7);\r\n    const startDay = String(startDateForm).substring(8,10);\r\n\r\n    const endYear = String(endDateForm).substring(11, 15);\r\n    let endMonth = String(endDateForm).substring(4,7);\r\n    const endDay = String(endDateForm).substring(8,10);\r\n\r\n    switch(startMonth) {\r\n      case \"Jan\" :\r\n        startMonth = \"01\";\r\n        break;\r\n      case \"Feb\" :\r\n        startMonth = \"02\";\r\n        break;\r\n      case \"Mar\" :\r\n        startMonth = \"03\";\r\n        break;\r\n      case \"Apr\" :\r\n        startMonth = \"04\";\r\n        break;\r\n      case \"May\" :\r\n        startMonth = \"05\";\r\n        break;\r\n      case \"Jun\" :\r\n        startMonth = \"06\";\r\n        break;\r\n      case \"Jul\" :\r\n        startMonth = \"07\";\r\n        break;\r\n      case \"Aug\" :\r\n        startMonth = \"08\";\r\n        break;\r\n      case \"Sep\" :\r\n        startMonth = \"09\";\r\n        break;\r\n      case \"Oct\" :\r\n        startMonth = \"10\";\r\n        break;\r\n      case \"Nov\" :\r\n        startMonth = \"11\";\r\n        break;\r\n      case \"Dec\" :\r\n        startMonth = \"12\";\r\n        break;\r\n      default :\r\n        break;\r\n    }\r\n\r\n    switch(endMonth) {\r\n      case \"Jan\" :\r\n        endMonth = \"01\";\r\n        break;\r\n      case \"Feb\" :\r\n        endMonth = \"02\";\r\n        break;\r\n      case \"Mar\" :\r\n        endMonth = \"03\";\r\n        break;\r\n      case \"Apr\" :\r\n        endMonth = \"04\";\r\n        break;\r\n      case \"May\" :\r\n        endMonth = \"05\";\r\n        break;\r\n      case \"Jun\" :\r\n        endMonth = \"06\";\r\n        break;\r\n      case \"Jul\" :\r\n        endMonth = \"07\";\r\n        break;\r\n      case \"Aug\" :\r\n        endMonth = \"08\";\r\n        break;\r\n      case \"Sep\" :\r\n        endMonth = \"09\";\r\n        break;\r\n      case \"Oct\" :\r\n        endMonth = \"10\";\r\n        break;\r\n      case \"Nov\" :\r\n        endMonth = \"11\";\r\n        break;\r\n      case \"Dec\" :\r\n        endMonth = \"12\";\r\n        break;\r\n      default :\r\n        break;\r\n    }\r\n\r\n    const rightStartDate = `${startYear}-${startMonth}-${startDay}`;\r\n    const rightEndDate = `${endYear}-${endMonth}-${endDay}`;\r\n\r\n    const newStartDate = new Date(rightStartDate);\r\n    const newEndDate = new Date(rightEndDate);\r\n\r\n    let resultRecord = [];\r\n    totalRecord.forEach((record) => {\r\n      let tempRecordDate = new Date(record.date);\r\n      if(tempRecordDate >= newStartDate && tempRecordDate <= newEndDate) {\r\n        resultRecord.push(record);\r\n      }\r\n    })\r\n\r\n    this.setState({\r\n      sortedRecord: resultRecord,\r\n      isSorted: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {totalRecord, startDate, endDate, isSorted, sortedRecord} = this.state;\r\n    return (\r\n      <>\r\n      <Sidebar/>\r\n      <div>\r\n        <div className=\"games-wrapper\">\r\n          <h1 className=\"games-title\">Played games record per day (UTC time zone)</h1> \r\n          <div className=\"calendar-main\">\r\n            Date range: \r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={(dates) => {\r\n                const [start, end] = dates;\r\n                this.setState({\r\n                  startDate: start,\r\n                  endDate: end\r\n                })\r\n              }}\r\n              startDate={startDate}\r\n              endDate={endDate}\r\n              selectsRange\r\n            />\r\n          </div>\r\n          <div className=\"calendar-button\">\r\n              <button onClick={this.sortTable}>Search</button>\r\n          </div>\r\n          <div className=\"infoBox\">\r\n            <span>&#9989; 5v5 Real Players</span>\r\n            <span>&#128065; Spectator</span>\r\n          </div>\r\n          <div className=\"games-main\"> \r\n            <table className=\"gameTable\">\r\n              <tr>\r\n                <th className=\"date\">Date</th>\r\n                <th className=\"number\">Finished(Unfinished)</th>\r\n                <th className=\"info\">Detail</th>\r\n              </tr>\r\n              {isSorted ? sortedRecord.map(game => (\r\n                <tr>\r\n                  <th>{game.date}</th>\r\n                  <th>{game.NumPlayedGame}({game.NumUnfinishedGame}) games</th>\r\n                  <th><GameModal result={game.date}/></th>\r\n                </tr>\r\n              )) : \r\n              totalRecord.map(game => (\r\n                <tr>\r\n                  <th>{game.date}</th>\r\n                  <th>{game.NumPlayedGame}({game.NumUnfinishedGame}) games</th>\r\n                  <th><GameModal result={game.date}/></th>\r\n                </tr>\r\n              ))\r\n              }\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div className=\"gameGraph\">\r\n          {isSorted ? (\r\n            <GameGraph gameDate={sortedRecord}></GameGraph>\r\n          ):(\r\n            <GameGraph gameDate={totalRecord}></GameGraph>  \r\n          )}\r\n        </div>\r\n      </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DashBoard;\r\n\r\n","import React from 'react';\r\nimport Modal from \"react-modal\";\r\nimport axios from \"axios\";\r\n\r\n//import css\r\nimport \"./style/Modal.css\"\r\nimport \"./style/Table.css\"\r\n\r\n\r\nconst path = \"http://13.59.148.13:8000\";\r\n//const path = \"http://localhost:8000\";\r\n\r\n\r\nclass PlayerModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showDetailBox: false,\r\n            date: this.props.date,\r\n            playerList: [],\r\n            goInfo: false,\r\n        }\r\n        this.handleOpenDetailBox = this.handleOpenDetailBox.bind(this);\r\n        this.handleCloseDetailBox = this.handleCloseDetailBox.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPlayedPlayerList();\r\n    }\r\n\r\n    handleOpenDetailBox() {\r\n        this.setState({ showDetailBox: true })\r\n        this.getPlayedPlayerList();\r\n    }\r\n    \r\n    handleCloseDetailBox() {\r\n        this.setState({ showDetailBox: false })\r\n    }\r\n\r\n    async getPlayedPlayerList() {\r\n        const {data} = await axios.get(`${path}/playersList/${this.props.date}`);\r\n        this.setState({\r\n            playerList: data[0]\r\n        })\r\n    }\r\n\r\n    onClickSendTrue() {\r\n        this.setState({goInfo: true})\r\n    }\r\n\r\n    render() {\r\n        const { playerList } = this.state;\r\n        // console.log(\"check for date\", date);\r\n        return (\r\n            <span>\r\n                <button onClick={this.handleOpenDetailBox} style={{fontFamily:\"Verdana, sans-serif\", fontSize: \"13px\"}}>Show Info</button>\r\n                <Modal isOpen={this.state.showDetailBox} contentLabel=\"Info Box\" className=\"mymodal\" overlayClassName=\"myoverlay\" onRequestClose={this.handleCloseDetailBox}>\r\n                    <h1 className=\"mainDate\" style={{fontFamily:\"Verdana, sans-serif\", fontSize: \"20px\"}}>Date:{this.props.date}</h1>\r\n                    <div className=\"table-wrapper\">\r\n                        <table className=\"playerTable\">\r\n                            <tr>\r\n                                <th className=\"pUserId\">User_id</th>\r\n                                <th className=\"pCharacterName\">Character_name</th>\r\n                            </tr>\r\n                            {playerList.map(player => (\r\n                                <tr>\r\n                                    <th>{player.user_id}</th>\r\n                                    <th>\r\n                                        {player.character_name}\r\n                                    </th> \r\n                                </tr>\r\n                            ))}\r\n                        </table>\r\n                    </div>\r\n                    <button onClick={this.handleCloseDetailBox}>Close</button>\r\n                </Modal>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlayerModal;","import {LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Label} from \"recharts\";\r\n\r\nconst RenderLineChart = (props) => {\r\n    const tempData = props.playerDate;\r\n    tempData.sort((a,b) => a.date.localeCompare(b.date));\r\n    // console.log(tempData);\r\n\r\n    return (\r\n        <LineChart width={600} height={330} data={tempData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }} >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"date\" angle=\"-25\" tick={{fontSize:11}} dy={8}>\r\n                <Label value=\"Date\" position=\"insideBottom\" dy={10}/>\r\n            </XAxis>\r\n            <YAxis label={{value: \"Count\", angle: -90, position: \"insideLeft\", dx: 10}}/>\r\n            <Tooltip/>\r\n            <Legend verticalAlign=\"top\" align=\"right\"/>\r\n            <Line name=\"Unique Played Player\" type=\"monotone\" dataKey=\"NumPlayedPlayer\" stroke=\"#0095FF\"/>\r\n            <Line name=\"Duplicated Played Player\" type=\"monotone\" dataKey=\"NumTotalPlayedPlayer\" stroke=\"#FF0000\"/>\r\n        </LineChart>  \r\n    )\r\n}\r\n\r\nexport default RenderLineChart;","import React, { useState } from 'react';\r\nimport axios from \"axios\";\r\n\r\n//import css\r\nimport \"./style/SearchUser.css\"\r\nimport \"./style/Modal.css\"\r\n\r\nconst path = \"http://13.59.148.13:8000\";\r\n\r\nconst SearchUser = () => {\r\n\r\n    const [playerID, setPlayerID] = useState(\"\");\r\n    const [playerRecord, setPlayerRecord] = useState([]);\r\n    const [hasSomething, setHasSomething] = useState(-1);\r\n\r\n    const onChange = (event) => {\r\n        const {target: {value}} = event;\r\n        setPlayerID(value);\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        async function getUserInfo() {\r\n            const {data} = await axios.get(`${path}/searchUser/${playerID}`)\r\n            setPlayerRecord(data);\r\n            if(data.length !== 0) {\r\n                setHasSomething(1);\r\n            } else {\r\n                setHasSomething(0);\r\n            }\r\n        }\r\n        getUserInfo();\r\n    }\r\n\r\n    const showRecord = () => {\r\n        if(hasSomething === 1) {\r\n            return (\r\n                <div className=\"tableContainer\">\r\n                    <table className=\"resultTable\">\r\n                        <tr>\r\n                            <th className=\"sId\">Match ID</th>\r\n                            <th className=\"sResult\">Result</th>\r\n                            <th className=\"sTime\">Time Created</th>\r\n                            <th className=\"sPlay\">Play Time</th>\r\n                        </tr>\r\n                        {playerRecord.map((record)=> {\r\n\r\n                            let colorBackground = \"#e2b6b3\";\r\n                            if(record.team_id === record.team_win_id) {\r\n                                colorBackground = \"#a3cfec\"\r\n                            } \r\n                            return (\r\n                                <tr style={{backgroundColor: colorBackground}}>\r\n                                    <th>{record.match_id}</th>\r\n                                    <th>{record.result}</th>\r\n                                    <th>{record.time_created}</th>\r\n                                    <th>{record.play_time} min</th>\r\n                                </tr>\r\n                                \r\n                            )\r\n                            })}\r\n                    </table>\r\n                </div>\r\n            )\r\n        } else if(hasSomething === 0) {\r\n            return (\r\n                <div style={{padding: 20}}>\r\n                    Your search - {playerID} - did not match any data.\r\n                </div>\r\n            )\r\n        } else if(hasSomething === -1) {\r\n            return (\r\n                <div style={{padding: 20}}>\r\n                    Please Input Player Name\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"searchContainter\">    \r\n                <form onSubmit={onSubmit} className=\"searchForm\">\r\n                    <input value={playerID} type=\"text\" onChange={onChange} placeholder=\"Input Player Name\"/>\r\n                    <input type=\"submit\" value=\"Search\"/>\r\n                </form>\r\n            </div>\r\n            <div className=\"resultContainer\">\r\n                {showRecord()}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchUser;","import React from 'react';\r\nimport axios from \"axios\";\r\nimport PlayerModal from \"./PlayerModal\";\r\nimport PlayerGraph from \"./PlayerGraph\";\r\nimport SearchUser from './SearchUser';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\n//import css\r\nimport \"./style/DashBoard.css\"\r\nimport \"./style/Table.css\"\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Sidebar from './Sidebar';\r\n\r\nconst path = \"http://13.59.148.13:8000\";\r\n//const path = \"http://localhost:8000\";\r\n\r\nclass PlayerHistory extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          playerRecord: [],\r\n          sortedRecord: [],\r\n          isSorted: false,\r\n          startDate: new Date(),\r\n          endDate: new Date(),\r\n          reload: false,\r\n        }\r\n        this.sortTable = this.sortTable.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.getPlayedPlayer();\r\n    }\r\n\r\n    async getPlayedPlayer() {\r\n        const {data} = await axios.get(`${path}/playedPlayers`);\r\n        this.setState({\r\n          playerRecord: data\r\n        });\r\n    }\r\n\r\n    sortTable() {\r\n        const {startDate, endDate, playerRecord} = this.state;\r\n        const startDateForm = startDate;\r\n        const endDateForm = endDate;\r\n    \r\n        const startYear = String(startDateForm).substring(11, 15);\r\n        let startMonth = String(startDateForm).substring(4,7);\r\n        const startDay = String(startDateForm).substring(8,10);\r\n    \r\n        const endYear = String(endDateForm).substring(11, 15);\r\n        let endMonth = String(endDateForm).substring(4,7);\r\n        const endDay = String(endDateForm).substring(8,10);\r\n    \r\n        switch(startMonth) {\r\n          case \"Jan\" :\r\n            startMonth = \"01\";\r\n            break;\r\n          case \"Feb\" :\r\n            startMonth = \"02\";\r\n            break;\r\n          case \"Mar\" :\r\n            startMonth = \"03\";\r\n            break;\r\n          case \"Apr\" :\r\n            startMonth = \"04\";\r\n            break;\r\n          case \"May\" :\r\n            startMonth = \"05\";\r\n            break;\r\n          case \"Jun\" :\r\n            startMonth = \"06\";\r\n            break;\r\n          case \"Jul\" :\r\n            startMonth = \"07\";\r\n            break;\r\n          case \"Aug\" :\r\n            startMonth = \"08\";\r\n            break;\r\n          case \"Sep\" :\r\n            startMonth = \"09\";\r\n            break;\r\n          case \"Oct\" :\r\n            startMonth = \"10\";\r\n            break;\r\n          case \"Nov\" :\r\n            startMonth = \"11\";\r\n            break;\r\n          case \"Dec\" :\r\n            startMonth = \"12\";\r\n            break;\r\n          default :\r\n            break;\r\n        }\r\n    \r\n        switch(endMonth) {\r\n          case \"Jan\" :\r\n            endMonth = \"01\";\r\n            break;\r\n          case \"Feb\" :\r\n            endMonth = \"02\";\r\n            break;\r\n          case \"Mar\" :\r\n            endMonth = \"03\";\r\n            break;\r\n          case \"Apr\" :\r\n            endMonth = \"04\";\r\n            break;\r\n          case \"May\" :\r\n            endMonth = \"05\";\r\n            break;\r\n          case \"Jun\" :\r\n            endMonth = \"06\";\r\n            break;\r\n          case \"Jul\" :\r\n            endMonth = \"07\";\r\n            break;\r\n          case \"Aug\" :\r\n            endMonth = \"08\";\r\n            break;\r\n          case \"Sep\" :\r\n            endMonth = \"09\";\r\n            break;\r\n          case \"Oct\" :\r\n            endMonth = \"10\";\r\n            break;\r\n          case \"Nov\" :\r\n            endMonth = \"11\";\r\n            break;\r\n          case \"Dec\" :\r\n            endMonth = \"12\";\r\n            break;\r\n          default :\r\n            break;\r\n        }\r\n    \r\n        const rightStartDate = `${startYear}-${startMonth}-${startDay}`;\r\n        const rightEndDate = `${endYear}-${endMonth}-${endDay}`;\r\n    \r\n        const newStartDate = new Date(rightStartDate);\r\n        const newEndDate = new Date(rightEndDate);\r\n    \r\n        let tempRecord = [];\r\n        playerRecord.forEach((record) => {\r\n          let tempRecordDate = new Date(record.date);\r\n          if(tempRecordDate >= newStartDate && tempRecordDate <= newEndDate) {\r\n            tempRecord.push(record);\r\n          }\r\n        })\r\n    \r\n        this.setState({\r\n          sortedRecord: tempRecord,\r\n          isSorted: true\r\n        })\r\n    \r\n      }\r\n\r\n    render() {\r\n        const {playerRecord, startDate, endDate, isSorted, sortedRecord, reload} = this.state;\r\n        if(!reload) {\r\n          this.setState({\r\n            reload: true\r\n          })\r\n        }\r\n        return (\r\n          <>\r\n            <Sidebar/>\r\n            <div>\r\n                <div className=\"players-wrapper\">\r\n                    <h1 className=\"players-title\">Played players record per day (UTC time zone)</h1>\r\n                    <div className=\"calendar-main\">\r\n                        Date range: \r\n                        <DatePicker\r\n                            selected={startDate}\r\n                            onChange={(dates) => {\r\n                                const [start, end] = dates;\r\n                                this.setState({\r\n                                startDate: start,\r\n                                endDate: end\r\n                                })\r\n                            }}\r\n                            startDate={startDate}\r\n                            endDate={endDate}\r\n                            selectsRange\r\n                            />\r\n                    </div>\r\n                    <div className=\"calendar-button\">\r\n                        <button onClick={this.sortTable}>Search</button>\r\n                    </div>                    \r\n                    <div className=\"players-main\">  \r\n                        <table className=\"playerTable\">\r\n                            <tr>\r\n                                <th className=\"date\">Date</th>\r\n                                <th className=\"number\">Num of Player(Duplication)</th>\r\n                                <th className=\"info\">Detail</th>\r\n                            </tr>\r\n                            {isSorted ? sortedRecord.map(player => (\r\n                                <tr>\r\n                                    <th>{player.date}</th>\r\n                                    <th>{player.NumPlayedPlayer}</th>\r\n                                    <th><PlayerModal date={player.date}/></th>\r\n                                    {console.log(\"check history\", player)}\r\n                                </tr>\r\n                            )) :\r\n                            playerRecord.map(player=> (\r\n                                <tr>\r\n                                    <th>{player.date}</th>\r\n                                    <th>{player.NumPlayedPlayer}({player.NumTotalPlayedPlayer}) players</th>\r\n                                    <th><PlayerModal date={player.date}/></th>\r\n                                </tr>\r\n                            ))\r\n                            }\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className=\"playerGraph\">\r\n                    {isSorted ? (\r\n                        <PlayerGraph playerDate={sortedRecord}></PlayerGraph>\r\n                    ) : (\r\n                        <PlayerGraph playerDate={playerRecord}></PlayerGraph>\r\n                    )}\r\n                </div>\r\n                <div className=\"containterSearchBox\">\r\n                  <SearchUser/>\r\n                </div>                \r\n            </div>\r\n          </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlayerHistory;","import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport axios from \"axios\";\r\n\r\n//import css\r\nimport \"./style/UserDetail.css\"\r\n\r\nconst path = \"http://13.59.148.13:8000\";\r\n\r\nconst ChampionList = [\"Kinuta\", \"Kito\", \"Arwen\", \"Iris\", \"Roku\", \"JJ\", \"Katherine\", \"Horigoshi\", \"Mary\", \"Lia\"]\r\n\r\nconst UserDetailInfo = ({userId, userName}) => {\r\n\r\n    const [userHistory, setUserHistory] = useState(\"\");\r\n    const [handleUserInfoBox, setHandleUserInfoBox] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(()=> {\r\n        async function getUserHistory() {\r\n            const {data} = await axios.get(`${path}/getUserHistory/${userId}`)\r\n            setUserHistory(data);\r\n        }\r\n\r\n        getUserHistory();\r\n\r\n    }, [userId])\r\n\r\n    const handleOpenUserInfoBox = () => {\r\n        setHandleUserInfoBox(true);\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleCloseUserInfoBox = () => {\r\n        setHandleUserInfoBox(false);\r\n        setOpen(false);\r\n    }\r\n\r\n    const onUserInfoClick = () => {\r\n        if(open) {\r\n            console.log(userHistory)\r\n            console.log(userName);\r\n            return (\r\n                <div>\r\n                    <h1 className=\"userdetail-name\">{userName}'s Record</h1>\r\n                    <table className=\"userdetail-table\">\r\n                        <tr>\r\n                            <th className=\"uId\">Match Id</th>\r\n                            <th className=\"uTime\">Time Created(Play Time)</th>\r\n                            <th className=\"uResult\">Result</th>\r\n                            <th className=\"uChampion\">Champion</th>\r\n                            <th className=\"uLevel\">Champion Level</th>\r\n                            <th className=\"uRecord\">Record</th>\r\n                            <th className=\"uKDA\">KDA</th>\r\n                            <th className=\"uGold\">Total Gold</th>\r\n                            <th className=\"uKilledMinion\">Killed Minion</th>\r\n                        </tr>\r\n                        {userHistory.map((record)=> {\r\n\r\n                            let result = \"Defeat\";\r\n                            let colorBackground = \"#e2b6b3\";\r\n                            if(record.team_id === record.team_win_id) {\r\n                                result = \"Victory\"\r\n                                colorBackground = \"#a3cfec\"\r\n                            } \r\n\r\n                            const  championName = ChampionList[record.champion_id];\r\n\r\n                            return (\r\n                                <tr style={{backgroundColor: colorBackground}}>\r\n                                    <th>{record.match_id}</th>\r\n                                    <th>{record.time_created}({record.play_time} min)</th>\r\n                                    <th>{result}</th>\r\n                                    <th>{championName}</th>\r\n                                    <th>{record.champion_level}</th>\r\n                                    <th>{record.record}</th>\r\n                                    <th>{record.KDA}</th>\r\n                                    <th>{record.total_gold}</th>\r\n                                    <th>{record.minion_killed}</th>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </table>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <span>\r\n            <span onClick={handleOpenUserInfoBox} style={{fontFamily:\"Verdana, sans-serif\", fontSize: \"13px\"}}>&#128269;</span>\r\n            <Modal isOpen={handleUserInfoBox} contentLabel=\"User Info\" onRequestClose={handleCloseUserInfoBox}>\r\n                {onUserInfoClick()}\r\n                <button onClick={handleCloseUserInfoBox}>Back</button>\r\n            </Modal>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default UserDetailInfo;\r\n","import React from 'react';\r\nimport axios from \"axios\";\r\nimport UserDetailInfo from './UserDetailInfo';\r\n\r\n//import css\r\nimport \"./style/RankingBoard.css\";\r\nimport Sidebar from './Sidebar';\r\n\r\nconst path = \"http://13.59.148.13:8000\";\r\n\r\nclass RankingBoard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rankList: [],\r\n            isDescendingByPoints: true,\r\n            isDescendingByNumGames: true,\r\n            totalPlayedPlayers: 0,\r\n            totalPage: 0,\r\n            page: 1,\r\n            reload: false,\r\n\r\n        }\r\n        this.sortByPoints = this.sortByPoints.bind(this);\r\n        this.sortByNumGames = this.sortByNumGames.bind(this);\r\n        this.rankColor = this.rankColor.bind(this);\r\n        this.showingTable = this.showingTable.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTotalPlayedPlayer();\r\n        this.getRank();\r\n        this.rankColor();\r\n    }\r\n\r\n    async getTotalPlayedPlayer () {\r\n        const {data} = await axios.get(`${path}/getTotalPlayedPlayers`);\r\n        this.setState({\r\n            totalPlayedPlayers: data[0].TotalCumulativePlayedPlayer,\r\n        }, () => {\r\n            this.calculatePageNumber()\r\n        })       \r\n    }\r\n\r\n    async getRank () {\r\n        const {data} = await axios.get(`${path}/getRank/${this.state.page}`);\r\n        this.setState({\r\n            rankList: data[0],\r\n        })\r\n    }\r\n\r\n    sortByPoints() {\r\n        const {rankList} = this.state;\r\n        let tempRank = rankList.slice();\r\n        if(!this.state.isDescendingByPoints) {\r\n            tempRank = rankList.sort((a,b)=>{\r\n                if(a.current_points > b.current_points) {\r\n                    return -1;\r\n                }\r\n                if(a.current_points < b.current_points) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            })\r\n        } else if(this.state.isDescendingByPoints) {\r\n            tempRank = rankList.sort((a,b)=>{\r\n                if(a.current_points < b.current_points) {\r\n                    return -1;\r\n                }\r\n                if(a.current_points > b.current_points) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            })\r\n        }            \r\n        this.setState({\r\n            isDescendingByPoints: !this.state.isDescendingByPoints,\r\n            rankList: tempRank\r\n        })\r\n    }\r\n\r\n    sortByNumGames() {\r\n        const {rankList} = this.state;\r\n        let tempRank = rankList.slice();\r\n        if(!this.state.isDescendingByNumGames) {\r\n            tempRank = rankList.sort((a,b)=>{\r\n                if(a.TotalNumGame > b.TotalNumGame) {\r\n                    return -1;\r\n                }\r\n                if(a.TotalNumGame < b.TotalNumGame) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            })\r\n        } else if(this.state.isDescendingByPoints) {\r\n            tempRank = rankList.sort((a,b)=>{\r\n                if(a.TotalNumGame < b.TotalNumGame) {\r\n                    return -1;\r\n                }\r\n                if(a.TotalNumGame > b.TotalNumGame) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            })\r\n        }            \r\n        this.setState({\r\n            isDescendingByNumGames: !this.state.isDescendingByNumGames,\r\n            rankList: tempRank\r\n        })\r\n    }\r\n\r\n    rankColor(playerScore) {\r\n        let color = \"\";\r\n        if(playerScore>=500) {\r\n            color=\"Black\"\r\n        } else if(playerScore>=400) {\r\n            color=\"Red/Black\"\r\n        } else if(playerScore>=300) {\r\n            color=\"Red\"\r\n        } else if(playerScore>=200) {\r\n            color=\"Blue\"\r\n        } else if(playerScore>=100) {\r\n            color=\"Yellow\"\r\n        } else {\r\n            color=\"White\"\r\n        }\r\n\r\n        if(color === \"Red/Black\") {\r\n            return (\r\n                <div>\r\n                    <div style={{display: \"inline-block\", width: 7.5, height: 15, border: \"1px solid black\",  background: \"Red\"}}></div>\r\n                    <div style={{display: \"inline-block\", width: 7.5, height: 15, border: \"1px solid black\",  background: \"Black\"}}></div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <div style={{width: 15, height: 15, border: \"1px solid black\",  background: color}}></div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    calculatePageNumber() {\r\n        const totalPage = Math.round(this.state.totalPlayedPlayers/100) + 1;\r\n        this.setState({\r\n            totalPage\r\n        })\r\n    }\r\n\r\n    showPagination() {\r\n\r\n    }\r\n\r\n    showingTable() {\r\n        const {rankList} = this.state;\r\n        let rank = 0;\r\n\r\n        return (\r\n            <>\r\n            <div className=\"rankTable-wrapper\">\r\n                    <table className=\"rankTable-main\">\r\n                        <tr>\r\n                            <th className=\"rank\">Rank</th>\r\n                            <th className=\"userId\">User_id</th>\r\n                            <th className=\"characterName\">Name</th>\r\n                            <th className=\"rankcolor\">Rank</th>\r\n                            <th className=\"currentPoints\">\r\n                                Points \r\n                                &nbsp; \r\n                                <span onClick={this.sortByPoints}>&#8645;</span>\r\n                            </th>\r\n                            <th className=\"TotalNumGame\">\r\n                                TotalGame \r\n                                &nbsp;\r\n                                <span onClick={this.sortByNumGames}>&#8645;</span>\r\n                            </th>\r\n                        </tr>\r\n                        {rankList.map(player=> (\r\n                            <tr>\r\n                                <th>{rank+=1}</th>\r\n                                <th>{player.user_id}</th>\r\n                                <th>{player.character_name} <UserDetailInfo userId={player.user_id} userName={player.character_name}/></th>\r\n                                <th>{this.rankColor(player.current_points)}</th>\r\n                                <th>{player.current_points}</th>\r\n                                <th>{player.TotalNumGame}</th>\r\n                            </tr>\r\n                        ))}\r\n                    </table>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <Sidebar/>\r\n            <div className=\"container\">\r\n                <h1 className=\"rankTable-title\">Top 100 Leaderboard</h1>\r\n                {this.showingTable()}\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RankingBoard;","export default __webpack_public_path__ + \"static/media/Kinuta.fe2cb5de.jpg\";","export default __webpack_public_path__ + \"static/media/Kito.226d59e0.jpg\";","export default __webpack_public_path__ + \"static/media/Arwen.c35e44c3.jpg\";","export default __webpack_public_path__ + \"static/media/Iris.9751b377.jpg\";","export default __webpack_public_path__ + \"static/media/Roku.9028b408.jpg\";","export default __webpack_public_path__ + \"static/media/JJ.a8023ab7.jpg\";","export default __webpack_public_path__ + \"static/media/Katherine.5e63483f.jpg\";","export default __webpack_public_path__ + \"static/media/Horigoshi.1ee3f1a2.jpg\";","export default __webpack_public_path__ + \"static/media/Mary.6c4b8dcf.jpg\";","export default __webpack_public_path__ + \"static/media/Lia.d04cfc5a.jpg\";","import React from 'react';\r\nimport axios from \"axios\";\r\n\r\n//import css\r\nimport \"./style/Champions.css\";\r\n\r\n//import image\r\nimport Kinuta from \"./image/Kinuta.jpg\";\r\nimport Kito from \"./image/Kito.jpg\";\r\nimport Arwen from \"./image/Arwen.jpg\";\r\nimport Iris from \"./image/Iris.jpg\";\r\nimport Roku from \"./image/Roku.jpg\"\r\nimport JJ from \"./image/JJ.jpg\";\r\nimport Katherine from \"./image/Katherine.jpg\";\r\nimport Horigoshi from \"./image/Horigoshi.jpg\";\r\nimport Mary from \"./image/Mary.jpg\";\r\nimport Lia from \"./image/Lia.jpg\"\r\nimport Sidebar from './Sidebar';\r\n\r\nconst path = \"http://13.59.148.13:8000\";\r\n//const path = \"http://localhost:8000\";\r\n\r\nconst ChampionsList = [\r\n    {\r\n        id: 0,\r\n        name: \"Kinuta\",\r\n        image: Kinuta,\r\n        type: [\"Carry\"]        \r\n    },\r\n    {\r\n        id: 1,\r\n        name: \"Kito\",\r\n        image: Kito,\r\n        type: [\"Support\"]        \r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Arwen\",\r\n        image: Arwen,\r\n        type: [\"Carry\"]        \r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Iris\",\r\n        image: Iris,\r\n        type: [\"Support\"]        \r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Roku\",\r\n        image: Roku,\r\n        type: [\"Jungle\", \"Assassin\"]        \r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"JJ\",\r\n        image: JJ,\r\n        type: [\"Carry\"]        \r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Katherine\",\r\n        image: Katherine,\r\n        type: [\"Carry\"]        \r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"Horigoshi\",\r\n        image: Horigoshi,\r\n        type: [\"Jungle\"]        \r\n    },\r\n    {\r\n        id: 8,\r\n        name: \"Mary\",\r\n        image: Mary,\r\n        type: [\"Jungle\", \"Support\"]        \r\n    },\r\n    {\r\n        id: 9,\r\n        name: \"Lia\",\r\n        image: Lia,\r\n        type: [\"Carry\"]        \r\n    },\r\n\r\n]\r\n\r\nlet totalPick = 0;\r\n\r\nclass Champions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            championsList: ChampionsList,\r\n            select: \"All\",\r\n            numPickList: [],\r\n            numWinList: [],\r\n        }\r\n        this.onClickWinRate = this.onClickWinRate.bind(this);\r\n        this.onClickPickRate = this.onClickPickRate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.callDataInOrder();\r\n    }\r\n    \r\n    async getNumPick () {\r\n        const {data} = await axios.get(`${path}/getNumPick`);\r\n        return data;\r\n    }\r\n\r\n    async getNumWin () {\r\n        const {data} = await axios.get(`${path}/getNumWin`);\r\n        return data;\r\n    }\r\n\r\n    async callDataInOrder() {\r\n        const pickData = await this.getNumPick();\r\n        const winData = await this.getNumWin();\r\n\r\n        pickData.forEach((pick) => {\r\n            totalPick += pick.numPick;\r\n        });\r\n\r\n        for(let i=0; i<ChampionsList.length; i++) {\r\n            ChampionsList[i].pickRate = (pickData[i].numPick/totalPick).toFixed(2);\r\n            ChampionsList[i].winRate = (winData[i].numWin/pickData[i].numPick).toFixed(2);\r\n        };\r\n        this.setState({\r\n            championsList: ChampionsList\r\n        })\r\n    }\r\n\r\n    sortChampions(type) {\r\n        const championsList = ChampionsList.slice();\r\n        const tempList = [];\r\n        if(type === \"All\") {\r\n            championsList.forEach((champion) => {\r\n                tempList.push(champion);\r\n            })\r\n        } else if(type === \"Jungle\") {\r\n            championsList.forEach((champion) => {\r\n                champion.type.forEach((tempType) => {\r\n                    if(tempType === \"Jungle\") {\r\n                        tempList.push(champion);\r\n                    }\r\n                })\r\n            })\r\n        } else if(type === \"Assassin\") {\r\n            championsList.forEach((champion) => {\r\n                champion.type.forEach((tempType) => {\r\n                    if(tempType === \"Assassin\") {\r\n                        tempList.push(champion);\r\n                    }\r\n                })\r\n            })\r\n        } else if(type === \"Support\") {\r\n            championsList.forEach((champion) => {\r\n                champion.type.forEach((tempType) => {\r\n                    if(tempType === \"Support\") {\r\n                        tempList.push(champion);\r\n                    }\r\n                })\r\n            })\r\n        } else if(type === \"Carry\") {\r\n            championsList.forEach((champion) => {\r\n                champion.type.forEach((tempType) => {\r\n                    if(tempType === \"Carry\") {\r\n                        tempList.push(champion);\r\n                    }\r\n                })\r\n            })\r\n        } \r\n        // console.log(tempList);\r\n        \r\n        return (\r\n            <div className=\"champions-img-table\">\r\n                {tempList.map((champion) => \r\n                    (\r\n                        <div className=\"\">\r\n                            <img src={champion.image} alt=\"champion\" style={{width: 80}} className=\"champions-img-protrait\"></img><br/>\r\n                            <span style={{fontFamily: \"Verdana, sans-serif\", fontSize: \"13px\"}}>{champion.name}</span>\r\n                        </div>\r\n                    )\r\n                )}  \r\n            </div>\r\n        )\r\n    }\r\n\r\n    onClickWinRate() {\r\n        console.log(\"Hello Win\")\r\n        let tempChampionList = ChampionsList.slice();\r\n        tempChampionList = tempChampionList.sort((a,b) => {\r\n            if(a.winRate > b.winRate) {\r\n                return -1;\r\n            } \r\n            if(a.winRate < b.winRate) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        })\r\n        // ChampionsList = tempChampionList;\r\n        this.setState({\r\n            championsList: tempChampionList\r\n        })\r\n    }\r\n\r\n    onClickPickRate() {\r\n        console.log(\"Hello Pick\")\r\n        let tempChampionList = ChampionsList.slice();\r\n        tempChampionList = tempChampionList.sort((a,b) => {\r\n            if(a.pickRate > b.pickRate) {\r\n                return -1;\r\n            } \r\n            if(a.pickRate < b.pickRate) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        })\r\n        this.setState({\r\n            championsList: tempChampionList\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {championsList, select} = this.state;\r\n        return (\r\n            <>\r\n            <Sidebar/>\r\n            <div className=\"champions-wrapper\">\r\n                <div className=\"champions-type\">\r\n                    <table>\r\n                        <tr>\r\n                            <th className=\"champions-type-content\" onClick={() => this.setState({select: \"All\"})}>All</th>\r\n                            <th className=\"champions-type-content\" onClick={() => this.setState({select: \"Jungle\"})}>Jungle</th>\r\n                            <th className=\"champions-type-content\" onClick={() => this.setState({select: \"Assassin\"})}>Assassin</th>\r\n                            <th className=\"champions-type-content\" onClick={() => this.setState({select: \"Support\"})}>Support</th>\r\n                            <th className=\"champions-type-content\" onClick={() => this.setState({select: \"Carry\"})}>Carry</th>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n                <div className=\"champions-ranking-menu\">\r\n                    <span className=\"champions-ranking-menu-title\">Champion Ranking</span>\r\n                    <div>\r\n                        <table className=\"champions-ranking-menu-table\">\r\n                            <tr>\r\n                                <th><span onClick={this.onClickWinRate}>Win Rate</span></th>\r\n                                <th><span onClick={this.onClickPickRate}>Pick Rate</span></th>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className=\"champions-ranking\">\r\n                    <table className=\"champions-ranking-table\">\r\n                        <tr>\r\n                            <th style={{width: \"20%\"}}>Number</th>\r\n                            <th style={{width: \"40%\"}}>Champion</th>\r\n                            <th style={{width: \"20%\"}}>Win Rate</th>\r\n                            <th style={{width: \"20%\"}}>Pick Rate</th>\r\n                        </tr>\r\n                        {championsList.map(champion => \r\n                            (\r\n                                <tr>\r\n                                    <th style={{width: \"20%\"}}>{champion.id+1}</th>\r\n                                    <th style={{width: \"40%\"}}>{champion.name}</th>\r\n                                    <th style={{width: \"20%\"}}>{(champion.winRate*100).toFixed(1)}%</th>\r\n                                    <th style={{width: \"20%\"}}>{(champion.pickRate*100).toFixed(1)}%</th>\r\n                                </tr>\r\n                            )\r\n                        )}\r\n                    </table>\r\n                </div>\r\n                <div className=\"champions-img\">\r\n                    {this.sortChampions(select)}\r\n                </div>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Champions;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport {BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip} from \"recharts\";\r\n\r\nimport \"./style/Retention.css\"\r\nimport Sidebar from './Sidebar';\r\n\r\nconst path = \"http://13.59.148.13:8000\";\r\n\r\nconst Retention = () => {\r\n    const [userData, setUserData] = useState([]);\r\n    const [retentionData, setRetentionData] = useState([]);\r\n    const [retentionfor30DaysData, setRetentionfor30DaysData] = useState([]);\r\n\r\n    useEffect(()=> {\r\n        async function getUserList() {\r\n            const {data} = await axios.get(`${path}/getUserListAtLeast1`)\r\n            setUserData(data);\r\n        }\r\n        getUserList();\r\n    }, [])\r\n\r\n    useEffect(()=> {\r\n        let resultDataFor7days = [\r\n            { day: \"0-Day\", count: 0},\r\n            { day: \"1-Day\", count: 0},\r\n            { day: \"3-Day\", count: 0}, \r\n            { day: \"7-Day\", count: 0}\r\n        ]\r\n        let resultDataFor30Days = [\r\n            { day: \"0-Day\", count: 0},\r\n            { day: \"3-Day\", count: 0},\r\n            { day: \"7-Day\", count: 0},\r\n            { day: \"15-Day\", count: 0},\r\n            { day: \"30-Day\", count: 0},\r\n        ]\r\n\r\n        function modify() {\r\n            let countSameUserId = 0;\r\n            for(let i=0; i<userData.length; i+=1) {\r\n                let Dday0 = new Date(userData[i].date);\r\n                let Dday1 = new Date(userData[i].date);\r\n                let Dday3 = new Date(userData[i].date);\r\n                let Dday7 = new Date(userData[i].date);\r\n                let Dday15 = new Date(userData[i].date);\r\n                let Dday30= new Date(userData[i].date);\r\n                Dday1.setDate(Dday0.getDate()+1);\r\n                Dday3.setDate(Dday0.getDate()+3);\r\n                Dday7.setDate(Dday0.getDate()+7);\r\n                Dday15.setDate(Dday0.getDate()+15);\r\n                Dday30.setDate(Dday0.getDate()+30);\r\n\r\n                for(let j=i; j<userData.length; j++) {\r\n                    if(userData[i].user_id !== userData[j].user_id) {\r\n                        continue;\r\n                    } else {\r\n                        let newDate = new Date(userData[j].date);\r\n                        if(newDate.getTime() === Dday0.getTime()) {\r\n                            resultDataFor7days[0].count +=1;\r\n                        } else if(Dday0.getTime()<newDate.getTime() && Dday1.getTime()>=newDate.getTime()) {\r\n                            resultDataFor7days[1].count +=1;\r\n                        } else if(Dday1.getTime()<newDate.getTime() && Dday3.getTime()>=newDate.getTime()) {\r\n                            resultDataFor7days[2].count +=1;\r\n                        } else if(Dday3.getTime()<newDate.getTime() && Dday7.getTime()>=newDate.getTime()) {\r\n                            resultDataFor7days[3].count +=1;\r\n                        }   \r\n\r\n                        if(newDate.getTime() === Dday0.getTime()) {\r\n                            resultDataFor30Days[0].count +=1;\r\n                        } else if(Dday0.getTime()<newDate.getTime() && Dday3.getTime()>=newDate.getTime()) {\r\n                            resultDataFor30Days[1].count +=1;\r\n                        } else if(Dday3.getTime()<newDate.getTime() && Dday7.getTime()>=newDate.getTime()) {\r\n                            resultDataFor30Days[2].count +=1;\r\n                        } else if(Dday7.getTime()<newDate.getTime() && Dday15.getTime()>=newDate.getTime()) {\r\n                            resultDataFor30Days[3].count +=1;\r\n                        } else if(Dday15.getTime()<newDate.getTime() && Dday30.getTime()>=newDate.getTime()) {\r\n                            resultDataFor30Days[4].count +=1;\r\n                        }\r\n                    } \r\n                    countSameUserId++;\r\n                }\r\n                i+=(countSameUserId-1);\r\n                countSameUserId = 0;\r\n            }\r\n            setRetentionData(resultDataFor7days);\r\n            setRetentionfor30DaysData(resultDataFor30Days);\r\n        }\r\n\r\n        modify();\r\n\r\n    }, [userData])\r\n\r\n    return (\r\n        <>\r\n        <Sidebar/>\r\n        <div className=\"re-container\">\r\n            <h1 className=\"re-title\">Retention Rate</h1>\r\n            <div className=\"re-7days\">\r\n                <BarChart width={600} height={400} data={retentionData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"day\" label={{value: \"Day\", position:\"insideBottom\", dy:5}} />\r\n                    <YAxis label={{value:\"Count\", angle: -90, position: \"insideLeft\", dx:10}}/>\r\n                    <Tooltip/>\r\n                    <Bar dataKey=\"count\" fill=\"#82ca9d\" label={{position:\"top\"}}/>\r\n                </BarChart>\r\n                <h2 className=\"graph-title\">7 Days Retention</h2>\r\n            </div>\r\n            <div className=\"re-30days\">\r\n                <BarChart width={600} height={400} data={retentionfor30DaysData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"day\" label={{value: \"Day\", position:\"insideBottom\", dy:5}} />\r\n                    <YAxis label={{value:\"Count\", angle: -90, position: \"insideLeft\", dx:10}}/>\r\n                    <Tooltip/>\r\n                    <Bar dataKey=\"count\" fill=\"#8884d8\" label={{position:\"top\"}}/>\r\n                </BarChart>\r\n                <h2 className=\"graph-title\">30 Days Retention</h2>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Retention;\r\n","export default __webpack_public_path__ + \"static/media/logo2.23fef2c7.png\";","import React, { useState } from \"react\"\r\nimport axios from \"axios\";\r\nimport Cookies from 'universal-cookie';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport logo from \"./image/logo2.png\"\r\nimport \"./style/SignIn.css\"\r\n\r\nconst path = \"http://13.59.148.13:8000\";\r\n\r\nconst SignIn = () => {\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [userPw, setUserPw] = useState(\"\");\r\n    const [reload, setReload] = useState(false);\r\n    const cookies = new Cookies();\r\n\r\n    const history = useHistory();\r\n\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"userId\") {\r\n            setUserId(value);\r\n        } else if(name === \"userPw\") {\r\n            setUserPw(value);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        const json = { id : userId, password : userPw};\r\n\r\n        axios.post(`${path}/login`, json, { withCredentials: true })\r\n            .then(res => {\r\n                if(res.data.result) {\r\n                    cookies.set('user', userId, {path: '/'});\r\n                    history.push(\"/gamerHistory\");\r\n                    setReload(!reload);\r\n                    window.location.reload();\r\n                } else {\r\n                    alert(\"Wrong Password\");\r\n                }\r\n            }) \r\n    }\r\n\r\n    return (\r\n        <div className=\"signIn-Container\">\r\n            <img src={logo} alt=\"logo of isekai Eternal\" className=\"logoImage\"/>\r\n            <h1 className=\"MainTitle\">Admin Website</h1>\r\n            <form onSubmit={onSubmit} className=\"auth-container\">\r\n                <input className=\"authInput\" name=\"userId\" placeholder=\"id\" required value={userId} onChange={onChange}/>\r\n                <input className=\"authInput\" name=\"userPw\" type=\"password\" placeholder=\"password\" required value={userPw} onChange={onChange}/>\r\n                <input className=\"authInput authSubmit\" type=\"submit\"/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn;","import React, { useEffect, useState } from \"react\"\r\nimport axios from \"axios\";\r\n\r\nimport Sidebar from './Sidebar';\r\nimport \"./style/Redeem.css\";\r\n\r\nconst path = \"http://13.59.148.13:8000\";\r\n\r\nconst Redeem = () => {\r\n    \r\n    const[useRedeemCode, setRedeemCode] = useState([]);\r\n    const[useRedeemCodeByGroup, setRedeemCodeByGroup] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function getRedeemCode() {\r\n            const {data} = await axios.get(`${path}/getGiftCode`)\r\n            setRedeemCode(data);\r\n        }\r\n\r\n        async function getRedeemCodeByGroup() {\r\n            const {data} = await axios.get(`${path}/getGiftCodeByDescription`)\r\n            setRedeemCodeByGroup(data);\r\n        }\r\n\r\n        getRedeemCode();\r\n        getRedeemCodeByGroup();\r\n\r\n    }, []) \r\n\r\n    return (\r\n        <>\r\n            <Sidebar/>\r\n            <div className=\"redeem-container\">\r\n                <div className=\"redeem-box\">\r\n                    <h1 className=\"redeem-title\">Redeem Code Info</h1>\r\n                    <div className=\"redeem-table-wrapper\">\r\n                        <table className=\"redeem-table\">\r\n                            <tr>\r\n                                <th className=\"code_string\">Code String</th>\r\n                                <th className=\"description\">Description</th>\r\n                                <th className=\"time_used\">Time Used</th>\r\n                                <th className=\"max_time_use\">Max Time Use</th>\r\n                            </tr>\r\n                            {useRedeemCode.map( redeem => (\r\n                                <tr>\r\n                                    <th>{redeem.code_string}</th>\r\n                                    <th>{redeem.description}</th>\r\n                                    <th>{redeem.time_used}</th>\r\n                                    <th>{redeem.max_time_use}</th>\r\n                                </tr>\r\n                            ))}\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className=\"redeem-boxForGroup\">\r\n                    <h1 className=\"redeem-title\">Redeem Code Info By Group</h1>\r\n                    <div className=\"redeem-table-wrapper\">\r\n                        <table className=\"redeem-table\">\r\n                            <tr>\r\n                                <th className=\"description2\">Description</th>\r\n                                <th className=\"totalTimeUsed\">Total Time Used</th>\r\n                                <th className=\"totalMaxTimeUse\">Total Max Time Use</th>\r\n                            </tr>\r\n                            {useRedeemCodeByGroup.map(redeem => (\r\n                                <tr>\r\n                                    <th>{redeem.description}</th>\r\n                                    <th>{redeem.totalTimeUsed}</th>\r\n                                    <th>{redeem.totalMaxTimeUse}</th>\r\n                                </tr>\r\n                            ))}\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Redeem;","import {HashRouter, Route} from \"react-router-dom\";\n\nimport GameHistory from \"./GameHistory\";\nimport PlayerHistory from \"./PlayersHistory\";\nimport RankingBoard from \"./RankingBoard\";\nimport Champions from \"./Champions\";\nimport Retention from \"./Retention\";\nimport SignIn from \"./SignIn\";\nimport Redeem from \"./Redeem\";\n\nimport Cookies from 'universal-cookie';\n\n//link has to be in HashRouter\nfunction App() {\n  const cookie = new Cookies();\n\n  return (\n    <HashRouter>\n    {cookie.get('user') !== 'admin' ? (\n      <>\n        <Route path=\"/\" exact={true} component={SignIn}/>\n      </>\n    ):(\n      <>\n        <Route path=\"/\" exact={true} component={SignIn}/>\n        <Route path=\"/gamerHistory\" exact={true} component={GameHistory}/>\n        <Route path=\"/playerHistory\" exact={true} component={PlayerHistory}/>\n        <Route path=\"/leaderboard\" exact={true} component={RankingBoard}/>\n        <Route path=\"/champions\" exact={true} component={Champions}/>\n        <Route path=\"/retention\" exact={true} component={Retention}/>     \n        <Route path=\"/redeemCode\" exact={true} component={Redeem}/>\n      </>\n    )}\n  </HashRouter>\n\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n     <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}